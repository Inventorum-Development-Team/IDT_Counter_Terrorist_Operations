items:
  - type: STR_SHOUT
    specialIconSprite: 2
    battleType: 9
    weight: 0
    accuracyUse: 1000
    psiAttackName: STR_SHOUT
    costUse:
      time: 30
    costPanic:
      time: 0
    costMindControl:
      time: 0
    recover: false
    damageType: 1
    power: 100 
    damageAlter: 
     ToStun: 0
     ToHealth: 0
     ToArmor: 0
     ToWound: 0
    fixedWeapon: true
    hitAnimation: -1
    maxRange: 15
    targetMatrix: 6
    LOSRequired: true
    blastRadius: 0
    tags:
      Shout: 1
  - type: STR_HANDCUFFS
    battleType: 6
    size: 0.1
    medikitTargetImmune: true
    invWidth: 1
    invHeight: 1
    bigSprite: 510
    floorSprite: 510
    handSprite: 510
    tuUse: 60
    weight: 2
    costBuy: 300
    costSell: 200
    medikitActionName: STR_USE_CUFFS
    medikitTargetMatrix: 32
    stimulant: 1
    tags:
      Cuffs: 1

  - type: STR_SCOPE #ignoreDuplicate
    tags:
     Mod: 1
  - type: STR_LASER_SIGHT #ignoreDuplicate
    tags:
     Mod: 2
  - type: STR_SUPPRESSOR #ignoreDuplicate
    tags:
     Mod: 3
    
  - type: STR_9MM_MAKAROV_X10 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_9MM_MAKAROV_X20 #ignoreDuplicate
    tags:
     AmmoNo: 2    
  - type: STR_9MM_MAKAROV_X30 #ignoreDuplicate
    tags:
     AmmoNo: 3
  - type: STR_9MM_PARABELLUM_X10 #ignoreDuplicate
    tags:
     AmmoNo: 1
  - type: STR_9MM_PARABELLUM_X20 #ignoreDuplicate
    tags:
     AmmoNo: 2
  - type: STR_9MM_PARABELLUM_X30 #ignoreDuplicate
    tags:
     AmmoNo: 3
  - type: STR_9MM_PARABELLUM_X40 #ignoreDuplicate
    tags:
     AmmoNo: 4   
  - type: STR_HK_4_6X20 #ignoreDuplicate
    tags:
     AmmoNo: 1
  - type: STR_HK_4_6X30 #ignoreDuplicate
    tags:
     AmmoNo: 2
  - type: STR_HK_4_6X40 #ignoreDuplicate
    tags:
     AmmoNo: 3   
  - type: STR_9MM_GYURZA_X20  #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_9MM_GYURZA_X30  #ignoreDuplicate
    tags:
     AmmoNo: 2   
  - type: STR_FN_57_X20 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_FN_57_X50 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_45_ACP_X7 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_45_ACP_X12 #ignoreDuplicate
    tags:
     AmmoNo: 1     
  - type: STR_45_ACP_X25 #ignoreDuplicate
    tags:
     AmmoNo: 1   
  - type: STR_CASELESS_4_73_X50 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_5_45_X30 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_5_45_X45 #ignoreDuplicate
    tags:
     AmmoNo: 2    
  - type: STR_5_45_X60 #ignoreDuplicate
    tags:
     AmmoNo: 3    
  - type: STR_5_56_X30 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_5_56_X50 #ignoreDuplicate
    tags:
     AmmoNo: 2    
  - type: STR_5_56_X100 #ignoreDuplicate
    tags:
     AmmoNo: 2
  - type: STR_22_LONG_RIFLE_6x #ignoreDuplicate
    tags:
     AmmoNo: 1
  - type: STR_SOVIET_7_62_X10 #ignoreDuplicate
    tags:
     AmmoNo: 1
  - type: STR_SOVIET_7_62_X30 #ignoreDuplicate
    tags:
     AmmoNo: 1
  - type: STR_SOVIET_7_62_X40 #ignoreDuplicate
    tags:
     AmmoNo: 2
  - type: STR_SOVIET_7_62_X75 #ignoreDuplicate
    tags:
     AmmoNo: 3    
  - type: STR_NATO_7_62_X5 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_NATO_7_62_X10 #ignoreDuplicate
    tags:
     AmmoNo: 2    
  - type: STR_NATO_7_62_X20 #ignoreDuplicate
    tags:
     AmmoNo: 3    
  - type: STR_NATO_7_62_X50 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_NATO_7_62_X100 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_SOVIET_7_62_MMR_X10 #ignoreDuplicate
    tags:
     AmmoNo: 1       
  - type: STR_SOVIET_7_62_MMR_X50 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_SOVIET_7_62_MMR_X100 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_9_39_X10 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_9_39_X20 #ignoreDuplicate
    tags:
     AmmoNo: 2    
  - type: STR_338_LAPUA_X5 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_50_BMG_X5 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_50_BMG_X10 #ignoreDuplicate
    tags:
     AmmoNo: 1        
  - type: STR_127_X5 #ignoreDuplicate
    tags:
     AmmoNo: 1     
  - type: STR_12G_BUCKSHOT_X2 #ignoreDuplicate
    tags:
     AmmoNo: 1  
  - type: STR_12G_BUCKSHOT_X5 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_12G_BUCKSHOT_X8 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  - type: STR_12G_BUCKSHOT_X20 #ignoreDuplicate
    tags:
     AmmoNo: 2    
  - type: STR_12G_BUCKSHOT_X30 #ignoreDuplicate
    tags:
     AmmoNo: 3    
  - type: STR_12G_SLUG_X8 #ignoreDuplicate
    tags:
     AmmoNo: 1 
  - type: STR_12G_NON_LETHAL_X8 #ignoreDuplicate
    tags:
     AmmoNo: 1    
  # - type: STR_ZEVADA_X3 #ignoreDuplicate
  #   tags:
  #    FlashAmmo: 1
  - type: STR_RPG_HEAT_X1 #ignoreDuplicate
    tags:
     AmmoNo: 1
  - type: STR_APAV40_X1 #ignoreDuplicate
    tags:
     AmmoNo: 2


  - type: STR_P226 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_GLOCK_17  #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_GLOCK_18 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_GLOCK_18_STOCK #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  # - type: STR_M1911 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_MK_23 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  - type: STR_MAKAROV #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_FIVE_SEVEN #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_VEKTOR #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_STETCKIN #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_TEC_9 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_MP5 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_MP7 #ignoreDuplicate
    tags:
     FoldStock: 1
     AmmoReSprite: 1
  # - type: STR_MPX #ignoreDuplicate
  #   tags:
  #    FoldStock: 1
  #    AmmoReSprite: 1
  - type: STR_P90 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_SKORPION #ignoreDuplicate
    tags:
     FoldStock: 1
     AmmoReSprite: 1
  # - type: STR_UZI  #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  #    FoldStock: 1
  # - type: STR_UMP #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  - type: STR_VITYAZ #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  # - type: STR_VERSEK #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_TAVOR #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_TAVOR_M203 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_TAVOR_95X #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_M4 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_M4_M320 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_M4_UBS #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  #    UBS: 1
  # - type: STR_M4A1 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_M4A1_M320 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_M4A1_UBS #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  #    UBS: 1
  - type: STR_AK12 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_AK15 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_FAMAS #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_G36 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_G36_AG #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_HK416 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_HK416_M320 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_HK416_UBS #ignoreDuplicate
    tags:
     AmmoReSprite: 1
     UBS: 1
  - type: STR_HK417 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
     Bipod: 1
  # - type: STR_FX_05 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_SCAR_L #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_SCAR_L_GL #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_SCAR_H #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_SCAR_H_GL #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_G11 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_SR_3 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_SR_3_ONE_HANDED #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  - type: STR_M16A2 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_AR_18 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  # - type: STR_AR_180 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  - type: STR_AKM #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_AK_74 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_FN_FAL #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_G3 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_PSG_1 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_MSG_90 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
     Bipod: 1
  - type: STR_VSS #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_DRAGUNOV #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  # - type: STR_OSV_96 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_SAKO_TRG #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  #    Bipod: 1
  - type: STR_AWP #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_AW #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_M82 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
     Bipod: 1
  - type: STR_ORIGIN_12 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  # - type: STR_AA_12 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  # - type: STR_USAS_12 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  - type: STR_SAIGA_12 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_M60 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
     Bipod: 1
  # - type: STR_M249 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  - type: STR_FN_MINIMI #ignoreDuplicate
    tags:
     AmmoReSprite: 1
     Bipod: 1
  # - type: STR_MK_48 #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  - type: STR_RPK_74 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
     Bipod: 1
  # - type: STR_PECHENEG #ignoreDuplicate
  #   tags:
  #    AmmoReSprite: 1
  - type: STR_RPG #ignoreDuplicate
    tags:
     AmmoReSprite: 1

  - type: STR_RIOT_SHIELD #ignoreDuplicate
    tags:
     Shield: 1
       
  - type: STR_FLASHBANG_GRENADE #ignoreDuplicate
    tags:
     FlashBang: 1
  
  - type: STR_ELECTRO_FLARE #ignoreDuplicate
    tags:
      STRIKE: 1
  - type: STR_MOLOTOV #ignoreDuplicate
    tags:
      STRIKE: 1

extended:
  tags:
    BattleUnit:
      Rank: int
      Shouted: int
      FlashBanged: int
      OGfiring: int
      OGreactions: int
      Handcuffed: int

      UNIT_RECOLOR_DESYNC: int
      UNIT_RECOLOR_COLOR: int
      UNIT_RECOLOR_BRIGHTNESS: int
      UNIT_RECOLOR_START_FRAME: int
      UNIT_RECOLOR_FRAME_LENGTH: int

    RuleItem:
      Shout: int
      Cuffs: int
      AmmoReSprite: int
      AmmoNo: int
      FoldStock: int
      Bipod: int
      UBS: int
      Shield: int
      FlashBang: int
      STRIKE: int
      Mod: int
#      FlashAmmo: int
#      JammChance: int
    BattleGame:
      Enemies: int
      Allies: int
      Turn: int
  scripts:
     createUnit:
        - offset: 1 #Halves enemies Tu:s on the first turn
          code: |
           var int tu;
           var int remainder;
           var int faction;
           BattleUnit.getFaction unit faction;
           if eq faction 1;
            unit.getTimeUnits tu;
            set remainder tu;
            mod remainder 2;
            sub tu remainder;
            div tu 2;
            BattleUnit.setTimeUnits unit tu;
            end;
           return;
        - offset: 2 #Makes Flashbang work early
          code: |
           BattleUnit.setTag unit Tag.FlashBanged -5;
           return;


     newTurnItem: #Resets number of Allies and Enemies alive
        - offset: 1
          code: |
           var int x;
           set x 0;
           BattleGame.setTag battle_game Tag.Enemies x;
           BattleGame.setTag battle_game Tag.Allies x;
           BattleGame.setTag battle_game Tag.Turn turn;
           return;

     newTurnUnit: #Counts number of Allies And Enemies alive
        - offset: 2
          code: |
           var int faction;
           var int allies;
           var int enemies;
           BattleUnit.getFaction unit faction;
           if eq faction 0;
             BattleGame.getTag battle_game allies Tag.Allies;
             add allies 1;
             BattleGame.setTag battle_game Tag.Allies allies;
           end;
           if eq faction 1;
             BattleGame.getTag battle_game enemies Tag.Enemies;
             add enemies 1;
             BattleGame.setTag battle_game Tag.Enemies enemies;
           end;
           return;
        - offset: 3
          code: | #flashbang effect removal
           var int flashbanged;
           var int accuracy;
           var int reactions;
           var int OGaccuracy;
           var int OGreactions;
           BattleUnit.getTag unit flashbanged Tag.FlashBanged;
           BattleUnit.getTag unit OGaccuracy Tag.OGfiring;
           BattleUnit.getTag unit OGreactions Tag.OGreactions;
           add flashbanged 4;
           if and gt turn flashbanged gt OGaccuracy 0;
            BattleUnit.Stats.setFiring unit OGaccuracy;
            BattleUnit.Stats.setReactions unit OGreactions;
            end;
           return;
        - offset: 4
          code: | #handcuffs stay permanent
           var int cuffed;
           var int health;
           BattleUnit.getTag unit cuffed Tag.Handcuffed;
           if eq cuffed 1;
            BattleUnit.getHealth unit health;
            add health 1;
            BattleUnit.setStun unit health;
            end;
           return;
            

     hitUnit: 
         - offset: 2 #Shield Script
           code: |
            var ptr BattleItem righthand;
            var ptr BattleItem lefthand;
            var int shield;
            var int random;
            var int kneeling;
            unit.getLeftHandWeapon lefthand;
            unit.getRightHandWeapon righthand;
            BattleItem.getTag lefthand shield Tag.Shield;
            if neq shield 1;
             BattleItem.getTag righthand shield Tag.Shield;
             end;
            if and eq side 0 eq shield 1;
             BattleGame.randomRange battle_game random 0 100;
             BattleUnit.isKneeled unit kneeling;
             if lt random 85;
              set power 0;
              end;
             if and lt random 95 eq kneeling 1;
              set power 0;
              end;
            end;
            
            
            return power part side;
         - offset: 3 #Shouting Script
           code: |
            var int x;
            var int allies;
            var int enemies;
            var int morale;
            var int health;
            var int faction;
            var int turn;
            var int shouted;

            BattleItem.getTag damaging_item x Tag.Shout;

            if eq x 1;
             BattleUnit.getFaction unit faction;

             if eq faction 1;
              BattleGame.getTag battle_game turn Tag.Turn;
              BattleUnit.getTag unit shouted Tag.Shouted;
              if eq shouted turn;
               BattleGame.flashMessage battle_game "STR_ALREADY_SHOUTED";
              end;

              if neq shouted turn;
               BattleUnit.setTag unit Tag.Shouted turn;
               BattleGame.getTag battle_game allies Tag.Allies;
               BattleGame.getTag battle_game enemies Tag.Enemies;
               add allies 1;
               sub allies enemies;
               if lt allies 0;
                set allies 0;
               end;
               mul allies 20;
               BattleUnit.getMorale unit morale;
               sub morale allies;
               BattleUnit.setMorale unit morale;
               end;

              end;
            if eq faction 2;
             BattleUnit.getHealth unit health;
             mul health 2;
             BattleUnit.setStun unit health;
             end;
            end;
            return power part side;

         - offset: 4 #FlashBang Script
           code: |
             var int flashbang;
             var int flashbanged;
             var int turn;
             var int accuracy;
             var int reactions;
             damaging_item.getTag flashbang Tag.FlashBang;
             if eq flashbang 1;
              battle_game.getTurn turn;
              unit.getTag flashbanged Tag.FlashBanged;
              add flashbanged 4;
              if gt turn flashbanged;
               BattleUnit.Stats.getFiring unit accuracy;
               BattleUnit.Stats.getReactions unit reactions;
               BattleUnit.setTag unit Tag.OGfiring accuracy;
               BattleUnit.setTag unit Tag.OGreactions reactions;
               sub reactions 50;
               sub accuracy 50;
               BattleUnit.Stats.setFiring unit accuracy;
               BattleUnit.Stats.setReactions unit reactions;
              end;
             end;
             return power part side;

#         - offset: 5 #KS-23 Flashbang script
#           code: |
#             var int flashbang;
#             var int flashbanged;
#             var int turn;
#             var int accuracy;
#             var int reactions;
#             var ptr BattleItem ammo;
#             var int ammoQ;
#
#             damaging_item.getAmmoItem ammo; #Why no WORK??????????????????????????
#             ammo.getTag flashbang Tag.FlashAmmo;
#
#             debug_log flashbang;
#             BattleItem.getAmmoQuantity damaging_item ammoQ;
#             debug_log ammoQ;
#             if and eq flashbang 1 eq ammoQ 2;
#              battle_game.getTurn turn;
#              unit.getTag flashbanged Tag.FlashBanged;
#              add flashbanged 4;
#              if gt turn flashbanged;
#               BattleUnit.Stats.getFiring unit accuracy;
#               BattleUnit.Stats.getReactions unit reactions;
#               BattleUnit.setTag unit Tag.OGfiring accuracy;
#               BattleUnit.setTag unit Tag.OGreactions reactions;
#               sub reactions 50;
#               sub accuracy 50;
#               BattleUnit.Stats.setFiring unit accuracy;
#               BattleUnit.Stats.setReactions unit reactions;
#               set power 0;
#              end;
#             end;
#             return power part side;

     healUnit: #Handcuff script
       - offset: 1
         code: |
          var int x;
          var int morale;
          var int health;

          var int emptyHands;
          var ptr BattleItem handWeapon;

          BattleItem.getTag item x Tag.Cuffs;
          if eq x 1;

           BattleUnit.getLeftHandWeapon target handWeapon;

           if eq null handWeapon;
             add emptyHands 1;
           end;

           BattleUnit.getRightHandWeapon target handWeapon;

           if eq null handWeapon;
             add emptyHands 1;
           end;

           BattleUnit.getMorale target morale;
           if or lt morale 30 eq emptyHands 2;
             BattleUnit.getHealth target health;
             add health 1;
             BattleUnit.setStun target health;
             BattleUnit.setTag target Tag.Handcuffed 1;
           end;
          end;
          return;


     selectItemSprite: #Switches between weapon sprites depending on ammo
       - offset: 1
         code: |
          var int x;
          var int y;
          var int z;
          var int a;
          var int b;
          var int c;
          var ptr BattleItem ammoptr;
          var ptr BattleItem secondaryammoptr;
          var ptr BattleItem UBSammoptr;
          var ptr RuleInventory invptr;
          var ptr BattleUnit owner;
          var int left;
          var int right;
          var int ammono;
          var int UBSammono;
          var int mod;
          var int kneeling;

          BattleItem.getTag item x Tag.AmmoReSprite;

          if and eq x 1 eq blit_part blit_item_big;

            item.getAmmoItem ammoptr;
            BattleItem.getTag  ammoptr ammono Tag.AmmoNo;
            BattleItem.getTag item y Tag.FoldStock;
            BattleItem.getTag item b Tag.Bipod;
            item.getAmmoForSlot secondaryammoptr 1;
            BattleItem.getTag secondaryammoptr mod Tag.Mod;

            if gt mod 0;
              mul mod 5;
              if eq b 1;
                mul mod 2;
              end;
              add sprite_index mod;
            end;

            if or eq y 1 eq b 1;
              item.getSlot invptr;
              RuleInventory.isLeftHand invptr left;
              RuleInventory.isRightHand invptr right;
              set z 0;
              if and eq left 0 eq right 0;
                if neq b 1;
                  set z 1;
                end;
              end;
              if or eq left 1 eq right 1;
                set z 2;
              end;
            end;
            if and eq b 1 eq z 2;
              item.getOwner owner;
              owner.isKneeled kneeling;
              if eq kneeling 1;
                add sprite_index 4;
              end;
              add sprite_index ammono;
            end;

            if and eq y 1  eq z 1;
              add sprite_index 4;
              add sprite_index ammono;
            end;

            if eq z 0;
              add sprite_index ammono;
            end;

            BattleItem.getTag item a Tag.UBS;
            if eq a 1;
              item.getAmmoForSlot UBSammoptr 1;
              BattleItem.getTag  UBSammoptr UBSammono Tag.AmmoNo;
              if eq UBSammono 1;
                add sprite_index 2;
              end;
            end;
          end;
          return sprite_index; 

       - offset: 2 # Air Strike Smoke sprite Script
         code: |
          var int x;
          var int y;
          BattleItem.getTag item x Tag.STRIKE;
          BattleItem.isFuseEnabled item y;
          if and eq x 1 eq y 1;
            add sprite_index 8;
          end;
          return sprite_index;

     recolorUnitSprite:
      # Based on script of the 40k mod
      # Credits go to BulletDesigner and Ohartenstein
      #*** Handles periodic recolors due to buffs/debuffs on units ***
       - offset: 10
         code: |
          var int frame;
          var int frameLength;
          var int recolorPeriod;
          var int desync;
          var int color;
          var int newShade;
          var int temp;
          var int morale;

          # Check to make sure this unit isn't set to be recolored by a hit first
          unit.getTag frame Tag.UNIT_RECOLOR_START_FRAME;
          unit.getTag frameLength Tag.UNIT_RECOLOR_FRAME_LENGTH;

          if neq frame 0;

            set temp anim_frame;
            sub temp frame;

            if lt temp frameLength;

              return new_pixel;

            end;

          end;

          set recolorPeriod 32;
          set frameLength 4;

          unit.getTag desync Tag.UNIT_RECOLOR_DESYNC;
          set frame anim_frame;
          add frame desync;
          mod frame recolorPeriod;

          sub frame frameLength;
          sub frame 1;

          BattleUnit.getMorale unit morale;

          if and lt morale 30 lt frame frameLength;

            set color COLOR_X1_GRAY;

            set temp frameLength;
            sub temp frame;
            mul temp 2; # a parameter that creates a nice flash animation
            get_shade newShade new_pixel;
            sub newShade temp;

            if and gt newShade 3 lt newShade 16;

              set_shade new_pixel newShade;
              set_color new_pixel color;

            end;

          end;

          return new_pixel;

     accuracyMultiplierBonusStats: #Weapon mod script
          - offset: 1
            code: |
              var int mod;
              var ptr BattleItem secondaryAmmo;

              weapon.getAmmoForSlot secondaryAmmo 1;
              BattleItem.getTag secondaryAmmo mod Tag.Mod;
              if eq mod 1; 
                  if eq battle_action BA_AIMEDSHOT;
                    add bonus 15;
                  else;
                    sub bonus 10;
                  end;
              end;
              if eq mod 2; 
                  if eq battle_action BA_SNAPSHOT;
                    add bonus 15;
                  else;
                    sub bonus 10;
                  end;
              end;
              if eq mod 3; 
                  if eq battle_action BA_AUTOSHOT;
                    add bonus 15;
                  else;
                    sub bonus 10;
                  end;
              end;

              return bonus;

